<?php
/**
 * Copyright Â© OpenGento, All rights reserved.
 * See LICENSE bundled with this library for license details.
 */
declare(strict_types=1);

use Magento\Framework\View\Element\Template;
use Opengento\Snowflake\ViewModel\Snowflake;

/** @var Template $block */
/** @var Snowflake $viewModel */
$viewModel = $block->getData('viewModel');
?>
<div id="snowflake_container"></div>

<script>
    require([
        'jquery',
        'jquery/ui',
        'domReady!'
    ], function($) {
        "use strict";

        <?php if ($viewModel->isForceSnow()): ?>
            letSnow();
        <?php elseif ($viewModel->isApiEnabled()): ?>
            let lat, lon, settings = {
                "url": "<?= $viewModel->getIpLocatorApiUrl() ?>",
                "method": "GET",
                "timeout": 0
            };
            $.ajax(settings).done(function (response) {
                [lat, lon] = response.loc.split(',');
                $.ajax({
                    url: '<?= $block->getData('meteoUrl') ?>lat/' + lat + '/lon/' + lon,
                    type: "GET",
                }).done(function (data) {
                    if (data.is_snowing) {
                        letSnow();
                    }
                });
            });
        <?php endif; ?>

        function letSnow() {
            let snowMax = <?= $viewModel->getSnowflakeQty() ?>;
            let snowColor = ["#DDD", "#BBB", "#AAA", "#EEE", "#CCC"];
            let snowEntity = "<?= $viewModel->getSnowflakeChar() ?>";
            let snowVSpeed = <?= $viewModel->getSnowflakeVSpeed() ?>;
            let snowHSpeed = <?= $viewModel->getSnowflakeHSpeed() ?>;
            let snowRotSpeed = <?= $viewModel->getSnowflakeRotSpeed() ?>;
            let snowMinSize = <?= $viewModel->getSnowflakeMinSize() ?>;
            const snowMaxSize = <?= $viewModel->getSnowflakeMaxSize() ?>;
            const snowRefresh = 50;
            const snowMaxBlur = 3;
            const snowStyles = "cursor: default; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; -o-user-select: none; user-select: none;";

            let snow = [],
                pos = [],
                coords = [],
                left = [],
                marginBottom,
                marginRight;

            let newPositions = '';

            for (let i = 0; i <= snowMax; i++) {
                newPositions += ("<span id='flake" + i + "'" +
                    " style='" + snowStyles + "position:absolute;top:-" + snowMaxSize + "'>"
                    + snowEntity + "</span>");
            }
            $('#snowflake_container').html(newPositions);

            let snowSize = snowMaxSize - snowMinSize;
            marginBottom = document.body.scrollHeight - 5;
            marginRight = document.body.clientWidth - 15;

            for (let i = 0; i <= snowMax; i++) {
                coords[i] = 0;
                left[i] = Math.random() * 15;
                pos[i] = 0.03 + Math.random() / 10;
                snow[i] = document.getElementById("flake" + i);
                snow[i].style.fontFamily = "inherit";
                let size = randomise(snowSize) + snowMinSize
                snow[i].size = size;
                snow[i].speedFactor = snowMaxSize / size / 2;
                snow[i].style.filter = "blur(" + (snowMaxBlur * ((snowMaxSize - size) / (snowMaxSize - snowMinSize))) / 2 + "px)";
                snow[i].style.fontSize = snow[i].size + "px";
                snow[i].style.color = snowColor[randomise(snowColor.length)];
                snow[i].style.zIndex = 1000;
                snow[i].style.textShadow = "1px 1px 5px #0000DD55";
                snow[i].style.transform = "rotate(0deg)";
                snow[i].vsink = snowVSpeed * snow[i].size / 5;
                snow[i].hsink = snowHSpeed * snow[i].size / 5;
                snow[i].posX = randomise(marginRight - snow[i].size);
                snow[i].posY = randomise(2 * marginBottom - marginBottom - 2 * snow[i].size);
                snow[i].style.left = snow[i].posX + "px";
                snow[i].style.top = snow[i].posY + "px";

                snow[i].rotationAngleStep = 0;
                snow[i].rotationAngActual = 0;
                if (snowRotSpeed > 0) {
                    let minimumRotSpeed = 1;
                    snow[i].rotationAngleStep = Math.floor((snowRotSpeed - minimumRotSpeed) * Math.random()) + minimumRotSpeed * ((i % 2) ? 1 : -1);
                    snow[i].rotationAngActual = snow[i].rotationAngleStep;
                }
            }

            function randomise(range) {
                return Math.floor(range * Math.random());
            }

            function resize() {
                if (snowVSpeed > 0) {
                    marginBottom = document.body.scrollHeight - 5;
                } else {
                    marginBottom = 10;
                }
                marginRight = document.body.clientWidth - 15;
            }

            function moveSnow() {
                for (let i = 0; i <= snowMax; i++) {
                    coords[i] += pos[i];
                    snow[i].posY += snow[i].vsink;
                    snow[i].posX += snow[i].hsink * snow[i].speedFactor;
                    snow[i].style.left = snow[i].posX + left[i] * Math.sin(coords[i]) + "px";
                    snow[i].style.top = snow[i].posY + "px";
                    snow[i].rotationAngActual += snow[i].rotationAngleStep;
                    snow[i].style.transform = "rotate(" + snow[i].rotationAngActual + "deg)";

                    // if (snowVSpeed > 0 && (snow[i].posY >= marginBottom - 2 * snow[i].size || parseInt(snow[i].style.left) > (marginRight - 3 * left[i]))) {
                    if (snowVSpeed > 0 && (snow[i].posY >= marginBottom - 2 * snow[i].size)) {
                        snow[i].posX = randomise(marginRight - snow[i].size);
                        snow[i].posY = 0;
                    }
                    if (snowVSpeed < 0 && (snow[i].posY < 0)) {
                        snow[i].posY = document.body.scrollHeight - snow[i].size *2;
                    }
                    if (snowHSpeed > 0 && (snow[i].posX >= marginRight - 2 * snow[i].size)) {
                        snow[i].posX = randomise(marginRight - snow[i].size);
                        snow[i].posY = 0;
                    }
                    if (snowHSpeed < 0 && (snow[i].posX < 0)) {
                        snow[i].posY = document.body.clientWidth - snow[i].size * 2;
                    }
                }
            }

            window.addEventListener('resize', resize);
            window.setInterval(moveSnow, snowRefresh);
        }
    });
</script>
